# Manual Update Instructions: `.github/workflows/changelog-ci.yml`

## Purpose
Update your workflow to remove unsupported inputs for `saadmk11/changelog-ci` and ensure correct changelog automation per project protocols.

---

## Steps

### 1. Locate the Workflow File

- Path: `.github/workflows/changelog-ci.yml`
- If the file doesn't exist, create it in the specified directory.

---

### 2. Edit the Workflow File

**Open the file in your preferred code editor.**

**Replace the changelog step with the following:**  
*(Remove any inputs not listed below, as only these are supported)*

```yaml name=.github/workflows/changelog-ci.yml
name: Full Changelog Maintenance

permissions:
  contents: write
  pull-requests: read

on:
  push:
    branches:
      - main
      - '**'
  pull_request:
    types: [opened, synchronize, closed, merged]
  merge_group:
  release:
    types: [published, edited, released]
  workflow_dispatch:

jobs:
  update-changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Changelog CI
        uses: saadmk11/changelog-ci@v1.2.0
        with:
          changelog_filename: CHANGELOG.md
          committer_username: github-actions[bot]
          committer_email: github-actions[bot]@users.noreply.github.com
          release_version: ${{ github.ref_name }}

      - name: Diagnostics – Show Changelog Diff
        run: |
          echo "==== CHANGELOG.md DIFF ===="
          git diff CHANGELOG.md || echo "No changes detected."

      - name: Diagnostics – List Workflow Status
        run: |
          echo "Workflow completed at $(date -u)"
          git status

      - name: Commit updated CHANGELOG.md
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: auto-update CHANGELOG.md [skip ci]" || echo "No changes to commit"
          git push

      - name: Diagnostics – Log Success/Failure
        if: ${{ success() }}
        run: echo "Changelog CI workflow completed successfully."
      - name: Diagnostics – Log Failure
        if: ${{ failure() }}
        run: echo "Changelog CI workflow failed. Check previous step logs for details."
```

---

### 3. Save and Commit Your Changes

**Via Git:**
```sh
git add .github/workflows/changelog-ci.yml
git commit -m "Update changelog CI workflow to remove unsupported inputs and comply with maintenance protocol"
git push
```

---

### 4. (Optional) Reference Fallback Config

If you want to use the fallback config file for changelog automation, ensure `.github/changelog-ci-config.yml` exists:

```yaml name=.github/changelog-ci-config.yml
changelog:
  file: CHANGELOG.md
  format: markdown
  template: templates/changelog-entry.md
  log: .github/diagnostics/changelog-ci.log
```

---

### 5. Confirm Automation

After pushing, create a test pull request or release to confirm the workflow runs successfully and updates `CHANGELOG.md` as expected.

---

## Troubleshooting

- If the workflow fails, check logs for errors related to unsupported inputs or permissions.
- Make sure your GitHub Actions token (`GITHUB_TOKEN`) has `write` permissions for content.
- If issues persist, consult `/protocols/changelog-maintenance-process.md` or `PROMPTS.md` for troubleshooting steps.

---

**For further help:**  
Ping Copilot or consult your diagnostics log for autonomous protocol events.

---

_Last updated: 2025-09-02_
